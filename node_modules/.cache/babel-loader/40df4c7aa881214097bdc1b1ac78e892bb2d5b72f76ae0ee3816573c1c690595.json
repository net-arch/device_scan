{"ast":null,"code":"// src/scripts/scan.ts\nimport { exec } from 'child_process';\nimport fs from 'fs';\nexport const scanNetwork = async () => {\n  // Initialize files\n  fs.writeFileSync('src/scripts/result.json', '');\n  fs.writeFileSync('src/scripts/ips.txt', '');\n\n  // Run arp -a command\n  exec('arp -a', (error, stdout, stderr) => {\n    if (error) {\n      console.error(`exec error: ${error}`);\n      return;\n    }\n\n    // Write the output to ips.txt\n    fs.writeFileSync('src/scripts/ips.txt', stdout);\n\n    // Run nmap command\n    exec('nmap -sV -T4 -iL src/scripts/ips.txt', (error, stdout, stderr) => {\n      if (error) {\n        console.error(`exec error: ${error}`);\n        return;\n      }\n\n      // Extract device information and write to result.json\n      // This is a placeholder. You'll need to replace this with actual code to parse the nmap output.\n      fs.writeFileSync('src/scripts/result.json', stdout);\n    });\n  });\n};","map":{"version":3,"names":["exec","fs","scanNetwork","writeFileSync","error","stdout","stderr","console"],"sources":["/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/scripts/scan.ts"],"sourcesContent":["// src/scripts/scan.ts\nimport { exec } from 'child_process';\nimport fs from 'fs';\n\nexport const scanNetwork = async () => {\n  // Initialize files\n  fs.writeFileSync('src/scripts/result.json', '');\n  fs.writeFileSync('src/scripts/ips.txt', '');\n\n  // Run arp -a command\n  exec('arp -a', (error, stdout, stderr) => {\n    if (error) {\n      console.error(`exec error: ${error}`);\n      return;\n    }\n\n    // Write the output to ips.txt\n    fs.writeFileSync('src/scripts/ips.txt', stdout);\n\n    // Run nmap command\n    exec('nmap -sV -T4 -iL src/scripts/ips.txt', (error, stdout, stderr) => {\n      if (error) {\n        console.error(`exec error: ${error}`);\n        return;\n      }\n\n      // Extract device information and write to result.json\n      // This is a placeholder. You'll need to replace this with actual code to parse the nmap output.\n      fs.writeFileSync('src/scripts/result.json', stdout);\n    });\n  });\n};\n"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,eAAe;AACpC,OAAOC,EAAE,MAAM,IAAI;AAEnB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC;EACAD,EAAE,CAACE,aAAa,CAAC,yBAAyB,EAAE,EAAE,CAAC;EAC/CF,EAAE,CAACE,aAAa,CAAC,qBAAqB,EAAE,EAAE,CAAC;;EAE3C;EACAH,IAAI,CAAC,QAAQ,EAAE,CAACI,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;IACxC,IAAIF,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAE,eAAcA,KAAM,EAAC,CAAC;MACrC;IACF;;IAEA;IACAH,EAAE,CAACE,aAAa,CAAC,qBAAqB,EAAEE,MAAM,CAAC;;IAE/C;IACAL,IAAI,CAAC,sCAAsC,EAAE,CAACI,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;MACtE,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAE,eAAcA,KAAM,EAAC,CAAC;QACrC;MACF;;MAEA;MACA;MACAH,EAAE,CAACE,aAAa,CAAC,yBAAyB,EAAEE,MAAM,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
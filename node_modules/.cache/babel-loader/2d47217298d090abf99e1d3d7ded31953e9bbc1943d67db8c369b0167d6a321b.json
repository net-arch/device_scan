{"ast":null,"code":"import { exec } from 'child_process';\nimport { writeFileSync } from 'fs';\nexport function performNmapScan(ip) {\n  return new Promise((resolve, reject) => {\n    const command = `nmap -A ${ip}`;\n    exec(command, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`exec error: ${error}`);\n        return reject(error);\n      }\n      const filename = `nmap_scan_${ip}.txt`;\n      writeFileSync(filename, stdout);\n      const match = stdout.match(/Service Info: Device: (.*?);/);\n      const serviceInfo = match ? match[1] : '一般';\n      resolve(serviceInfo);\n    });\n  });\n}","map":{"version":3,"names":["exec","writeFileSync","performNmapScan","ip","Promise","resolve","reject","command","error","stdout","stderr","console","filename","match","serviceInfo"],"sources":["/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/scripts/perform_nmap_scan.ts"],"sourcesContent":["import { exec } from 'child_process';\nimport { writeFileSync } from 'fs';\n\nexport function performNmapScan(ip: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const command = `nmap -A ${ip}`;\n    exec(command, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`exec error: ${error}`);\n        return reject(error);\n      }\n\n      const filename = `nmap_scan_${ip}.txt`;\n      writeFileSync(filename, stdout);\n\n      const match = stdout.match(/Service Info: Device: (.*?);/);\n      const serviceInfo = match ? match[1] : '一般';\n      resolve(serviceInfo);\n    });\n  });\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,aAAa,QAAQ,IAAI;AAElC,OAAO,SAASC,eAAeA,CAACC,EAAU,EAAmB;EAC3D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAI,WAAUJ,EAAG,EAAC;IAC/BH,IAAI,CAACO,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;MACvC,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAE,eAAcA,KAAM,EAAC,CAAC;QACrC,OAAOF,MAAM,CAACE,KAAK,CAAC;MACtB;MAEA,MAAMI,QAAQ,GAAI,aAAYT,EAAG,MAAK;MACtCF,aAAa,CAACW,QAAQ,EAAEH,MAAM,CAAC;MAE/B,MAAMI,KAAK,GAAGJ,MAAM,CAACI,KAAK,CAAC,8BAA8B,CAAC;MAC1D,MAAMC,WAAW,GAAGD,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MAC3CR,OAAO,CAACS,WAAW,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/client/AppScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import ScanResults from './ScanResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppScreen = () => {\n  _s();\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanResults, setScanResults] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/').then(response => response.json()).then(results => {\n      setScanResults(results);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  const startScan = () => {\n    setIsScanning(true);\n  };\n  if (isScanning) {\n    return /*#__PURE__*/_jsxDEV(ScanResults, {\n      scanResultsProps: scanResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white bg-opacity-20 rounded-full p-1 inline-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          animation: 'fadeInUp 1s ease-in 1s forwards'\n        },\n        className: \"text-white text-4xl font-bold mt-4\",\n        children: \"Device Scanner \\u3078\\u3088\\u3046\\u3053\\u305D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          animation: 'fadeInUp 1s ease-in 1.5s forwards'\n        },\n        className: \"text-white text-opacity-70 mt-2\",\n        children: \"\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF\\u306E\\u72B6\\u614B\\u78BA\\u8A8D\\u3057\\u307E\\u3057\\u3087\\u3046\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          animation: 'fadeInUp 1s ease-in 2s forwards'\n        },\n        onClick: startScan,\n        className: \"mt-4 bg-white text-purple-600 font-semibold py-2 px-4 rounded-full hover:bg-purple-100\",\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AppScreen, \"aFtas0UNl3l+SFvBBduUapb39Dc=\");\n_c = AppScreen;\nexport default AppScreen;\nvar _c;\n$RefreshReg$(_c, \"AppScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AppScreen","_s","isScanning","setIsScanning","scanResults","setScanResults","fetch","then","response","json","results","catch","error","console","startScan","ScanResults","scanResultsProps","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","animation","onClick","_c","$RefreshReg$"],"sources":["/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/client/AppScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import ScanResults from './ScanResults';\nimport { scanNetwork } from '../scripts/return';\nimport fs from 'fs';\n\nconst AppScreen = () => {\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanResults, setScanResults] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/')\n      .then(response => response.json())\n      .then(results => {\n        setScanResults(results);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  const startScan = () => {\n    setIsScanning(true);\n  };\n\n  if (isScanning) {\n    return <ScanResults scanResultsProps={scanResults} />;\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500\">\n      <div className=\"text-center\">\n        <div className=\"bg-white bg-opacity-20 rounded-full p-1 inline-block\">\n          {/* <img src=\"./images/NETWORK_NBG.png\" alt=\"Computer Monitor\" className=\"w-64 h-64 object-cover rounded-full\" /> */}\n        </div>\n        <h1 style={{ animation: 'fadeInUp 1s ease-in 1s forwards' }} className=\"text-white text-4xl font-bold mt-4\">Device Scanner へようこそ</h1>\n        <p style={{ animation: 'fadeInUp 1s ease-in 1.5s forwards' }} className=\"text-white text-opacity-70 mt-2\">ネットワークの状態確認しましょう。</p>\n        <button style={{ animation: 'fadeInUp 1s ease-in 2s forwards' }} onClick={startScan} className=\"mt-4 bg-white text-purple-600 font-semibold py-2 px-4 rounded-full hover:bg-purple-100\">\n          スタート\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AppScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,OAAO,IAAI;MACfL,cAAc,CAACK,OAAO,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBX,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAID,UAAU,EAAE;IACd,oBAAOH,OAAA,CAACgB,WAAW;MAACC,gBAAgB,EAAEZ;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvD;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,uFAAuF;IAAAC,QAAA,eACpGvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvB,OAAA;QAAKsB,SAAS,EAAC;MAAsD;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhE,CAAC,eACNrB,OAAA;QAAIwB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAkC,CAAE;QAACH,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAoB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrIrB,OAAA;QAAGwB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAoC,CAAE;QAACH,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/HrB,OAAA;QAAQwB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAkC,CAAE;QAACC,OAAO,EAAEX,SAAU;QAACO,SAAS,EAAC,wFAAwF;QAAAC,QAAA,EAAC;MAExL;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
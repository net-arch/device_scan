{"ast":null,"code":"var _jsxFileName = \"/Users/sf/ghq/github.com/net-arch/device_scan/src/client/ScanResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport IpMacPairCard from \"./IpMacPairCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onCardClick = () => {\n  // ここで遷移を行います。具体的な方法はあなたのアプリケーションの設定によります。\n};\nconst ScanResults = () => {\n  _s();\n  const [ipCount, setIpCount] = useState(0);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true); // 追加\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/nmap\").then(response => response.json()).then(results => {\n      console.log(results);\n      setIpCount(results.ipCount);\n      setResults(results.data);\n      setLoading(false); // データがフェッチされたらローディング状態を更新\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500 flex-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center w-full mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-4xl\",\n        children: \"\\u63A5\\u7D9A\\u30C7\\u30D0\\u30A4\\u30B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white text-2xl\",\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) // ローディング中のメッセージを表示\n    : results && results.map((result, index) => /*#__PURE__*/_jsxDEV(IpMacPairCard, {\n      vendor: result.vendor,\n      OS: result.OS,\n      ip: result.ip // 追加\n      ,\n      mac: result.mac // 追加\n      ,\n      onCardClick: onCardClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanResults, \"hKeLW+SZGCi9xuo78J9MHzlSAPk=\");\n_c = ScanResults;\nexport default ScanResults;\nvar _c;\n$RefreshReg$(_c, \"ScanResults\");","map":{"version":3,"names":["React","useState","useEffect","IpMacPairCard","jsxDEV","_jsxDEV","onCardClick","ScanResults","_s","ipCount","setIpCount","results","setResults","loading","setLoading","fetch","then","response","json","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","vendor","OS","ip","mac","_c","$RefreshReg$"],"sources":["/Users/sf/ghq/github.com/net-arch/device_scan/src/client/ScanResults.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport IpMacPairCard from \"./IpMacPairCard\";\n\ninterface Result {\n  ip: string;\n  mac: string;\n  vendor: string; // 追加\n  OS: string; // 追加\n  // Add other properties if needed\n}\n\nconst onCardClick = () => {\n  // ここで遷移を行います。具体的な方法はあなたのアプリケーションの設定によります。\n};\n\nconst ScanResults = () => {\n  const [ipCount, setIpCount] = useState(0);\n  const [results, setResults] = useState<Result[]>([]);\n  const [loading, setLoading] = useState(true); // 追加\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/nmap\")\n      .then((response) => response.json())\n      .then((results) => {\n        console.log(results);\n        setIpCount(results.ipCount);\n        setResults(results.data);\n        setLoading(false); // データがフェッチされたらローディング状態を更新\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex justify-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500 flex-wrap\">\n      <div className=\"text-center w-full mt-4\">\n        <h1 className=\"text-white text-4xl\">接続デバイス</h1> {/* ここを変更 */}\n      </div>\n      {loading ? (\n        <div className=\"text-white text-2xl\">読み込み中...</div> // ローディング中のメッセージを表示\n      ) : (\n        results &&\n        results.map((result, index) => (\n          <IpMacPairCard\n            key={index}\n            vendor={result.vendor}\n            OS={result.OS}\n            ip={result.ip} // 追加\n            mac={result.mac} // 追加\n            onCardClick={onCardClick}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ScanResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;AAAA,CACD;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEL,OAAO,IAAK;MACjBQ,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;MACpBD,UAAU,CAACC,OAAO,CAACF,OAAO,CAAC;MAC3BG,UAAU,CAACD,OAAO,CAACU,IAAI,CAAC;MACxBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKmB,SAAS,EAAC,oFAAoF;IAAAC,QAAA,gBACjGpB,OAAA;MAAKmB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCpB,OAAA;QAAImB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,EACLhB,OAAO,gBACNR,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;IAAA,EAEpDlB,OAAO,IACPA,OAAO,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxB3B,OAAA,CAACF,aAAa;MAEZ8B,MAAM,EAAEF,MAAM,CAACE,MAAO;MACtBC,EAAE,EAAEH,MAAM,CAACG,EAAG;MACdC,EAAE,EAAEJ,MAAM,CAACI,EAAG,CAAC;MAAA;MACfC,GAAG,EAAEL,MAAM,CAACK,GAAI,CAAC;MAAA;MACjB9B,WAAW,EAAEA;IAAY,GALpB0B,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACF,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
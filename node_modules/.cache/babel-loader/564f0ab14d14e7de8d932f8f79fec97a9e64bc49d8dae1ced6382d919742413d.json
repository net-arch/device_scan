{"ast":null,"code":"var _jsxFileName = \"/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/client/ScanResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanResults = () => {\n  _s();\n  const [lineCount, setLineCount] = useState(0);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/nmap').then(response => response.json()).then(results => {\n      setLineCount(results.lineCount);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Line count: \", lineCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanResults, \"sWWE5WosHNzjs2Ga2rlWW9JLzKU=\");\n_c = ScanResults;\nexport default ScanResults;\nvar _c;\n$RefreshReg$(_c, \"ScanResults\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScanResults","_s","lineCount","setLineCount","fetch","then","response","json","results","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/client/ScanResults.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ScanResults = () => {\n  const [lineCount, setLineCount] = useState(0);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/nmap')\n      .then(response => response.json())\n      .then(results => {\n        setLineCount(results.lineCount);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Scan Results</h1>\n      <p>Line count: {lineCount}</p>\n    </div>\n  );\n};\n\nexport default ScanResults;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,OAAO,IAAI;MACfL,YAAY,CAACK,OAAO,CAACN,SAAS,CAAC;IACjC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAAa,QAAA,GAAG,cAAY,EAACV,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACf,EAAA,CApBID,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
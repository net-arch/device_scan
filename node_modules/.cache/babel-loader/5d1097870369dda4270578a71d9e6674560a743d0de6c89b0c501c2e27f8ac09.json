{"ast":null,"code":"// import React, { useState} from 'react';\n// import { IpMacPair, getIps } from '../scripts/get_ips';\n// import IpMacPairCard from './IpMacPairCard';\n\n// interface ScanResultsProps {\n//   scanResultsProps: IpMacPair[];\n// }\n\n// const ScanResults: React.FC<ScanResultsProps> = ({ scanResultsProps }) => {\n//   const [scanResults, setScanResults] = useState<IpMacPair[]>(scanResultsProps);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const startScan = async () => {\n//     setIsLoading(true);\n//     const results = await getIps();\n//     setScanResults(results);\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500\">\n//       <h1>Scan Results</h1>\n//       <button onClick={startScan} disabled={isLoading}>\n//         {isLoading ? 'Scanning...' : 'Start'}\n//       </button>\n//       {isLoading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <pre>{JSON.stringify(scanResults, null, 2)}</pre>\n//       )}\n//       <div className=\"flex flex-wrap justify-center\">\n//       {scanResults.map((result, index) => (\n//         <IpMacPairCard key={index} serviceInfo={result.serviceInfo} image={result.image} />\n//         // <IpMacPairCard key={index} serviceInfo={result.serviceInfo} image={result.image} />\n//       ))}\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/Users/sf/ghq/github.com/Fukuda-Sakito/device_scan/src/client/ScanResults.tsx"],"sourcesContent":["// import React, { useState} from 'react';\n// import { IpMacPair, getIps } from '../scripts/get_ips';\n// import IpMacPairCard from './IpMacPairCard';\n\n// interface ScanResultsProps {\n//   scanResultsProps: IpMacPair[];\n// }\n\n// const ScanResults: React.FC<ScanResultsProps> = ({ scanResultsProps }) => {\n//   const [scanResults, setScanResults] = useState<IpMacPair[]>(scanResultsProps);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const startScan = async () => {\n//     setIsLoading(true);\n//     const results = await getIps();\n//     setScanResults(results);\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-indigo-500 to-sky-500\">\n//       <h1>Scan Results</h1>\n//       <button onClick={startScan} disabled={isLoading}>\n//         {isLoading ? 'Scanning...' : 'Start'}\n//       </button>\n//       {isLoading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <pre>{JSON.stringify(scanResults, null, 2)}</pre>\n//       )}\n//       <div className=\"flex flex-wrap justify-center\">\n//       {scanResults.map((result, index) => (\n//         <IpMacPairCard key={index} serviceInfo={result.serviceInfo} image={result.image} />\n//         // <IpMacPairCard key={index} serviceInfo={result.serviceInfo} image={result.image} />\n//       ))}\n//       </div>\n//     </div>\n//   );\n// };"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}